<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntscheidungsbaumLernen</name>
    </assembly>
    <members>
        <member name="T:EntscheidungsbaumLernen.Controller.AttrAuswaehlerErstesAttribut`2">
            <summary>
            Attributauswähler, welcher einfach immer das erste verfügbare Attribut zurückgibt.
            </summary>
            <remarks>
            Überbleibsel aus der Entwicklung des Systems, aber für eventuelle Sonderfälle aufgehoben.<br />
            Schnelle Laufzeit ;) <br />
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
            <typeparam name="TBsp">Typ der Klasse der Beispieldaten.</typeparam>
            <typeparam name="TResult">Typ der Eigenschaft des Ergebnisses</typeparam>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.AttrAuswaehlerErstesAttribut`2.#ctor">
            <summary>
            Liefert ein <see cref="T:EntscheidungsbaumLernen.Controller.AttrAuswaehlerErstesAttribut`2"/>-Obekt.
            </summary>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.AttrAuswaehlerErstesAttribut`2.ChoosAttribute(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@)">
            <inheritdoc/>
        </member>
        <member name="T:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2">
            <summary>
            Attributauswähler, welcher den Gain Absolut Algorithmus verwendet.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
            <typeparam name="TBsp">Typ der Klasse der Beispieldaten.</typeparam>
            <typeparam name="TResult">Typ der Eigenschaft des Ergebnisses</typeparam>
        </member>
        <member name="F:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2._anzDezimalstellen">
            <summary>
            Anzahl an Dezimalstellen, für die Ausgabe.
            </summary>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2.#ctor">
            <summary>
            Liefert ein <see cref="T:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2"/>-Objekt, welches mit einer Ausgabe von 4 Nachkomastellen initalisiert wurde.
            </summary>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2.#ctor(System.Int32)">
            <summary>
            Liefert ein <see cref="T:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2"/>-Objekt.
            </summary>
            <param name="anzahlDezimalstellenAusgabe">Anzahl an Nachkomastellen für die Ausgabe.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2.ChoosAttribute(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2.GewinnAttribut(System.Collections.Generic.List{`0}@,System.Type)">
            <summary>
            Ermittelt welchen Informationsgewinn die Auswahl des überbgenen <paramref name="attribut"/> bringt.
            </summary>
            <param name="beispielliste">Liste an Beispielen.</param>
            <param name="attribut">Attribut, dessen Informationsgewinn ermittelt werden soll.</param>
            <returns>Menge des Informationsgewinns.</returns>
            <exception cref="T:System.ArgumentException">Wenn der übergebe <paramref name="attribut"/> kein <see cref="T:System.Enum"/> ist.</exception>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2.BerechneWahscheinlichkeit(System.Double)">
            <summary>
            Wandelt den <paramref name="wert"/> durch Umrechnen in einen Wahrscheinlichkeitswert um.
            </summary>
            <param name="wert">Umzurechnender Wert.</param>
            <returns>Ermittelter Wahrscheinlichkeitswert.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2.Runde(System.Double@)">
            <summary>
            Runden die übergebene Zahl auf eine Zahl mit <see cref="F:EntscheidungsbaumLernen.Controller.AttrAuswaehlerGainAbsolut`2._anzDezimalstellen"/> Stellen.
            </summary>
            <param name="zuRunden">Zu rundende Zahl.</param>
            <returns>Gerundete Zahl.</returns>
        </member>
        <member name="T:EntscheidungsbaumLernen.Controller.DialogAnwenden`2">
            <summary>
            Komponente für den Dialog mit dem Benutzer des Systems.
            </summary>
            <remarks>
            Aktuell kann man nur ein "kompletes" Ergebnis-Objek übergeben werden.<br />
            <br /><b>Versionen:</b><br />
            V1.0 14.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogAnwenden`2.Abfragen">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogAnwenden`2.EingabeAuswerten(`0@)">
            <inheritdoc/>
        </member>
        <member name="T:EntscheidungsbaumLernen.Controller.DialogLernen`2">
            <summary>
            Klasse für die Kommunikation mit den Personen die das System anlernen sollen.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 14.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="P:EntscheidungsbaumLernen.Controller.DialogLernen`2.DefaultWert">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogLernen`2.AusgabeBaumstruktur">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogLernen`2.BeispielHinzufuegen(System.Collections.Generic.IEnumerable{`0}@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogLernen`2.BeispielHinzufuegen(`0@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogLernen`2.ErstelleListeAllerAttribute">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogLernen`2.LerneBeispiele">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogLernen`2.LerneBeispiele(System.Collections.Generic.List{System.Type}@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogLernen`2.LerneBeispiele(`1@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.DialogLernen`2.LerneBeispiele(System.Collections.Generic.List{System.Type}@,`1@)">
            <inheritdoc/>
        </member>
        <member name="T:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2">
            <summary>
            Eigentlicher Lernalgorithmus für das Entscheidungsbaum-Lernen.
            </summary>
            <typeparam name="TBsp">Typ der Beispiel-Objekte.</typeparam>
            <typeparam name="TResult">Typ der Eigenschaft des Ergebnisses der Beispiel-Objekte.</typeparam>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.1 14.06.2021 - Paz-Paz - Alles bez. 'Wissensspeicher' entfernt.<br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="F:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2._attributAuswaehler">
            <summary>
            Objekt zum Auswählen des nächsten Attributs.
            </summary>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.#ctor(EntscheidungsbaumLernen.Interfaces.IAttributAuswaehler{`0,`1})">
            <summary>
            Liefert ein <see cref="T:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2"/>-Objekt.
            </summary>
            <param name="attributAuswaehler">Objekt zum Auswählen des nächsten Attributs.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.Lerne(System.Collections.Generic.List{`0}@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.Lerne(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.Lerne(System.Collections.Generic.List{`0}@,`1@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.Lerne(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@,`1@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.LernrePrivat(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@,`1@)">
            <inheritdoc cref="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.Lerne(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@,`1@)"/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.PruefeObAlleElementeGleichesResultHaben(System.Collections.Generic.List{`0}@,System.Object@)">
            <summary>
            Prüft ob Alle Elemente der Liste bei der Eigenschaft <typeparamref name="TResult"/> den gleichen Wert haben. Wenn ja, wird <i>true</i> zurückgegeben und bei <paramref name="result"/> eben dieser Wert hinterlegt.
            </summary>
            <param name="beispielliste">Liste an zu durchsuchenden Beispielen.</param>
            <param name="result">Ergebnis, falls alle Listenelemente den gleichen Ergebnis-Werte haben.</param>
            <returns><i>True</i> wenn alle Elemente den gleichen Ergebnis-Wert haben, ansonsten <i>false</i>.</returns>
            <exception cref="T:System.ArgumentNullException">Wenn <paramref name="beispielliste"/> null oder leer ist.</exception>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.LernAlgorithmusDT`2.TeileInListen(System.Type,System.Collections.Generic.List{`0})">
            <summary>
            Teilt die übergebene Liste <paramref name="zuTeilen"/> Anhand des Enums <paramref name="attribut"/> in so viele Listen auf, wie das Enum Elemente hat.
            </summary>
            <param name="attribut">Typ des Enums, nach dem aufgeteilt werden soll.</param>
            <param name="zuTeilen">Liste an aufzuteilenden Beispielen.</param>
            <returns>Ein Dictionary, bei dem die Schlüssel die Werte des Enums <paramref name="attribut"/> sind. Die Values sind jeweils Listen an Elementen aus <paramref name="zuTeilen"/> die diesen Werten zuzuweisen sind.</returns>
            <exception cref="T:System.ArgumentException">Wenn der übergebe <paramref name="attribut"/> kein <see cref="T:System.Enum"/> ist.</exception>
        </member>
        <member name="T:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1">
            <summary>
            Nutzt als Speicherort für den Baum eine Datei auf der Festplatte.
            </summary>
            <typeparam name="TResult">Typ des Ergebnisses</typeparam>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="F:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1._next">
            <summary>
            Nächser Speicher in der Kette.
            </summary>
        </member>
        <member name="F:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1._datei">
            <summary>
            Dateiname unter dem gespeichert / geladen werden soll.
            </summary>
        </member>
        <member name="F:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1._speichereLeserlich">
            <summary>
            Flag ob die Json-Datei leserlich (true) oder minimiert (false) gespeichert werden soll.
            </summary>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.#ctor(System.String,System.Boolean)">
            <summary>
            Liefert ein <see cref="T:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1"/>-Objekt.
            </summary>
            <param name="datei">Dateiname der verwendet werden soll.</param>
            <param name="speichereLeserlich">Wenn true wird die gespeicherte JSON-Datei 'schön' gespeichert, bei false wird sie minimiert gespeichert.</param>
        </member>
        <member name="P:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.Next">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.LadeBaum">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.SetNaechsteInstanz(EntscheidungsbaumLernen.Interfaces.IWissensspeicher)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.SpeichereBaum(EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.ErzeugeIEntscheidungsbaumWurzel(EntscheidungsbaumLernen.Controller.WissensspeicherDatei{`0}.SpeicherKnoten@)">
            <summary>
            Erzeugt aus einem <paramref name="knoten"/> und dessen Kinder ein <see cref="T:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1"/> und dessen Kinder.
            </summary>
            <remarks>
            Wird benötigt, da sich die <see cref="T:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1"/>-Klassen nicht einfach so sreialisieren lassen.
            </remarks>
            <param name="knoten">Wurzel des aktuell umzuwandelnden (Teil-) Baumes.</param>
            <returns>Erzeugtes Objekt.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.ErzeugeSpeicherbaum(EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel)">
            <summary>
            Wandelt ein <paramref name="wurzel"/> in ein Objekt vom Typ <see cref="T:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.SpeicherKnoten"/> um, um es dann auf die Platte zu speichern.
            </summary>
            <remarks>
            Wird benötigt, da sich die <see cref="T:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1"/>-Klassen nicht einfach so sreialisieren lassen.
            </remarks>
            <param name="wurzel">Wurzel des aktuell umzuwandelnden (Teil-) Baumes.</param>
            <returns>Erzeugtes Objekt.</returns>
        </member>
        <member name="T:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.SpeicherKnoten">
            <summary>
            Klasse zum Abspeichern eines Knotens.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="P:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.SpeicherKnoten.Kinder">
            <summary>
            Liste der Kinder.
            </summary>
        </member>
        <member name="P:EntscheidungsbaumLernen.Controller.WissensspeicherDatei`1.SpeicherKnoten.Wureltyp">
            <summary>
            Voll-Qualifizierter Wurzeltyp. (<see cref="P:System.Type.AssemblyQualifiedName"/>)
            </summary>
        </member>
        <member name="T:EntscheidungsbaumLernen.Controller.WissensspeicherRam">
            <summary>
            Speichert das Wissen nur im RAM, so dass es bei jedem Programmneustart neu generiert werden muss.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="F:EntscheidungsbaumLernen.Controller.WissensspeicherRam._baumwurzel">
            <summary>
            Objekt, in dem die Wurzel des Entscheidungsbaumes gespeichert wird.
            </summary>
        </member>
        <member name="F:EntscheidungsbaumLernen.Controller.WissensspeicherRam._next">
            <summary>
            Nächser Speicher in der Kette.
            </summary>
        </member>
        <member name="P:EntscheidungsbaumLernen.Controller.WissensspeicherRam.Next">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherRam.LadeBaum">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherRam.SetNaechsteInstanz(EntscheidungsbaumLernen.Interfaces.IWissensspeicher)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Controller.WissensspeicherRam.SpeichereBaum(EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel)">
            <inheritdoc/>
        </member>
        <member name="T:EntscheidungsbaumLernen.Factorys.WissensspeicherFactory">
            <summary>
            Factory zum Erzeugen der Klasse des Wissensspeichers
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="F:EntscheidungsbaumLernen.Factorys.WissensspeicherFactory._response">
            <summary>
            Wissensspeicher an sich.
            </summary>
        </member>
        <member name="M:EntscheidungsbaumLernen.Factorys.WissensspeicherFactory.Build">
            <summary>
            Erzeugt ein <see cref="T:EntscheidungsbaumLernen.Interfaces.IWissensspeicher"/>-Objekt aus den zuvor gemachten Einstellungen und gibt es zurück.
            </summary>
            <returns>Erzeugtes Objekt</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Factorys.WissensspeicherFactory.Clear">
            <summary>
            Entfernt alle bisher hinterlegten Wissensspeicher.
            </summary>
            <remarks>
            Falls keiner mehr hinzugefügt wird, wir der "RAM" als Default trotzdem verwendet.
            </remarks>
            <returns>Die Factory um weitere Einstellungen vornehmen zu können.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Factorys.WissensspeicherFactory.AddRamSpeicher">
            <summary>
            Fügt einen Speicher hinzu, welcher die Daten (nur) im RAM ablegt und nirgends persistent speichert.
            </summary>
            <returns>Die Factory um weitere Einstellungen vornehmen zu können.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Factorys.WissensspeicherFactory.AddDateiSpeicher``1(System.String@,System.Boolean@)">
            <summary>
            Fügt einen Speicher hinzu, welcher aus Datein lesen und in sie schreiben kann.
            </summary>
            <param name="pfad">Pfad zur Datei. Falls die Datei nicht existiert wird versucht sie beim ersten Schreiben anzulegen.</param>
            <param name="speichereLeserlich">Wenn true wird die gespeicherte JSON-Datei 'schön' gespeichert, bei false wird sie minimiert gespeichert.</param>
            <returns>Die Factory um weitere Einstellungen vornehmen zu können.</returns>
            <exception cref="T:System.NotImplementedException">Datei-Speicher wurde noch (nicht fertig) implementiert.</exception>
        </member>
        <member name="M:EntscheidungsbaumLernen.Factorys.WissensspeicherFactory.AddEigenenSpeicher(EntscheidungsbaumLernen.Interfaces.IWissensspeicher@)">
            <summary>
            Fügt einen beliebigen, auch extern erzeugen, Wissensspeicher hinzu.
            </summary>
            <remarks>
            Vorbereitet um in Zukunft das externe Erstellen von Wissensspeichern per <see cref="T:EntscheidungsbaumLernen.Interfaces.IWissensspeicher"/> zu ermöglichen.
            </remarks>
            <param name="wissensspeicher">Hinzuzufügender Wissensspeicher.</param>
            <returns>Die Factory um weitere Einstellungen vornehmen zu können.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Factorys.WissensspeicherFactory.AddSpeicher(EntscheidungsbaumLernen.Interfaces.IWissensspeicher)">
            <summary>
            Fügt den übergebenen Wissensspeicher hinzu.
            </summary>
            <param name="wissensspeicher"></param>
        </member>
        <member name="T:EntscheidungsbaumLernen.Helper.Ausgeber">
            <summary>
            Klasse um diverse Ausgaben an zentraler Stelle zu verwalten.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.GibAttributlisteAufKonsoleAus(System.Collections.Generic.List{System.Type}@)">
            <summary>
            Schreibt die Liste der übergebenen Attribute auf die Konsole.
            </summary>
            <remarks>
            <b>Beispiel:</b><br />
            <example>
            <code>
            Attributliste:<br />
            *) Attraktiv<br />
            *) Preis<br />
            *) Loge<br />
            *) Wetter<br />
            *) ...
             </code>
            </example>
            </remarks>
            <param name="liste">Liste der auszugebenen Attribute.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.GibBaumAus(EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel@)">
            <summary>
            Gibt den Baum auf der Konsole aus.
            </summary>
            <remarks>
            <b>Beispiel:</b><br />
            <example>
            <code>
            Baumstruktur:<br />
            Gruppe<br />
             ├ Freunde: Kategorie<br />
             │  ├ AC: Ja<br />
             │  ├ KO: Attraktiv<br />
            .....
             </code>
            </example>
            </remarks>
            <param name="wurzel">Wurzelknoten des Entscheidungsbaumes.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.GibBeispiellisteAufKonsoleAus``2(System.Collections.Generic.List{``0}@)">
            <summary>
            Gibt die übergebene Beispielliste als Tabelle auf der Konsole aus.
            </summary>
            <typeparam name="TBsp">Klasse der Beispiel-Elemente.</typeparam>
            <typeparam name="TResult">Eigenschaft des Ergebnisses, um es ganz rechts darzustellen.</typeparam>
            <param name="beispielliste">Liste der auszugebenden Beispiele.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.GibBaumAus(EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel@,System.Collections.Generic.List{System.String}@)">
            <inheritdoc cref="M:EntscheidungsbaumLernen.Helper.Ausgeber.GibBaumAus(EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel@)"/>
            <param name="praefixliste">Liste an Praefixen, die vor den aktuellen Baum gesetzt werden sollen.</param>
            <param name="wurzel"><inheritdoc cref="M:EntscheidungsbaumLernen.Helper.Ausgeber.GibBaumAus(EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel@)"/></param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.GibPraefixAus(System.Collections.Generic.List{System.String}@)">
            <summary>
            Schreibt die Liste der übergebenen Texte (ohne Zeilenumbruch) auf die Konsole.
            </summary>
            <param name="liste">Liste die geschrieben werden soll.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.ErmittleBreiteAllerSpalten``1(System.Collections.Generic.List{``0}@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Reflection.PropertyInfo}@)">
            <summary>
            Ermittelt die Breite der auszugebenden Tabelle.
            </summary>
            <typeparam name="TBsp">Typ der Beispiel-Elemente.</typeparam>
            <param name="beispielliste">Liste an Beispielen die ausgegeben werden sollen.</param>
            <param name="titel">Liste der Titel zu den Beispielen.</param>
            <param name="properties">Liste der Eigenschaften aus <typeparamref name="TBsp"/> die ausgegeben werden sollen.</param>
            <returns>Die Breite der Tabelle.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.PasseFensterbreiteAn(System.Int32[]@)">
            <summary>
            Passt, bei Bedarf, die Breite des CMD-Fensters an die Breite der Tabelle an.
            </summary>
            <param name="laengen">Spaltenbreiten zum ermitteln der Tabellenbreite.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.PropertiesErmitteln``1(System.Reflection.PropertyInfo[])">
            <summary>
            Filtert die übergebene Liste an Eigenschaften und gibt die Verwendbaren zurück.
            </summary>
            <typeparam name="TResult">Ergebnis-Typ, welcher nicht zurückgegeben werden soll.</typeparam>
            <param name="propertyInfos">Liste der zu filternden Eigenschaften.</param>
            <returns>Liste der Eigenschaften die nicht rausgefiltert wurden.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.SchreibeInhalt``2(System.Collections.Generic.List{``0}@,System.Int32[]@,System.Collections.Generic.List{System.Reflection.PropertyInfo}@)">
            <summary>
            Schreibt den Hinhalt von <paramref name="beispielliste"/> in Tabellenform in die Konsolenausgabe.
            </summary>
            <typeparam name="TBsp">Typ der Beispiele.</typeparam>
            <typeparam name="TResult">Typ des Ergebnisses.</typeparam>
            <param name="beispielliste">Liste der auszugebenden Beispiele.</param>
            <param name="laengen">Liste der Breiten der einzelnen Spalten.</param>
            <param name="properties">Liste der Eigenschaften die aus <typeparamref name="TBsp"/> ausgegeben werden sollen.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.SchreibeQuerstrich(System.Int32[]@,System.Boolean@)">
            <summary>
            Zeichnet eine Horizontale Line (─), wobei nach dem ersten Element und vor dem letzten Element ein ┼ hinzugefügt wrid.
            </summary>
            <param name="laengen">Liste der Breiten der einzelnen Spalten.</param>
            <param name="letzteZeile">Wenn hier <i>true</i> ist, wird ein ┴ statt dem ┼ verwendet.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.SchreibeTitel(System.Collections.Generic.List{System.String}@,System.Int32[]@)">
            <summary>
            Schreibt die Titel auf die Konsolenausgabe.
            </summary>
            <param name="titel">Liste der Titel.</param>
            <param name="laengen">Liste der Spaltenbreiten.</param>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Ausgeber.TitelErmitteln``1(System.Reflection.PropertyInfo[])">
            <summary>
            Ermittelt anhand der übergebenen <paramref name="propertyInfos"/> den Namen der Titel.
            </summary>
            <typeparam name="TResult">Ergebnis-Eigenschaft, da deren Name nicht zurückgegeben wird.</typeparam>
            <param name="propertyInfos">Liste der Eigenschaften deren Namen ermittelt werden soll.</param>
            <returns>Liste der ermittelten Eigenschaftsnamen.</returns>
        </member>
        <member name="T:EntscheidungsbaumLernen.Helper.Checks">
            <summary>
            Klasse für diverse Prüfungen.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.Checks.EnumCheck(System.Type)">
            <summary>
            Prüft ob der übergebene Typ ein Enum ist. Wenn nicht wird eine <see cref="T:System.ArgumentException"/> ausgelöst.
            </summary>
            <param name="type">Zu prüfender Type.</param>
            <exception cref="T:System.ArgumentException">Wenn der übergebe <paramref name="type"/> kein <see cref="T:System.Enum"/> ist.</exception>
        </member>
        <member name="T:EntscheidungsbaumLernen.Helper.KlassenHelper">
            <summary>
            Helfer für alles das mit dem Handling von Klassen zu tun hat.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.KlassenHelper.ErstellAttributliste``2">
            <summary>
            Liefert eine Liste aller <see cref="T:System.Enum"/>-Attribute der Klasse <typeparamref name="TBsp"/>. Dabei wird die Eigenschaft <typeparamref name="TResult"/> ignoriert.
            </summary>
            <typeparam name="TBsp">Type, dessen Attribute aufgelistet werden sollen.</typeparam>
            <typeparam name="TResult">Type der Eigenschaft, welche beim Auflisten ignoriert werden soll, da sie dem Ergebnis entspricht.</typeparam>
            <returns>Liste an Typen, die die Klasse <typeparamref name="TBsp"/> als Eigenschaften besitzt, kann auch eine leere Liste sein.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Helper.KlassenHelper.GetValue``1(``0,System.Type)">
            <summary>
            Liefert den Wert des Attributs mit dem übergebenen Typen.
            </summary>
            <typeparam name="T">Typ des auszulesenden Objekts.</typeparam>
            <param name="auszulesen">Auszulesendes Objekt.</param>
            <param name="enumType">Typ der Eigenschaft die Ausgelesn werden soll.</param>
            <returns>Ausgelesener Wert, oder 'null' wenn nicht auslesbar oder auffindbar.</returns>
            <exception cref="T:System.ArgumentException">Wenn der übergebe <paramref name="enumType"/> kein <see cref="T:System.Enum"/> ist.</exception>
        </member>
        <member name="T:EntscheidungsbaumLernen.Interfaces.IAttributAuswaehler`2">
            <summary>
            Interface für die Klasse, welche für das Auswählen des nächsten Attributs zuständig ist.
            </summary>
            <typeparam name="TBsp">Typ der Objekte, welche in der Beispielliste enthalten sind.</typeparam>
            <typeparam name="TResult">Typ der Eigenschaft von <typeparamref name="TBsp"/>, die als Ergebniss verwendet wird.</typeparam>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.IAttributAuswaehler`2.ChoosAttribute(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@)">
            <summary>
            Wählt anhand der Beispielliste und der Attributliste ein (hoffentlich) optimales Attribut aus.
            </summary>
            <param name="beispielliste">Liste an Beispielen.</param>
            <param name="attributsliste">Liste an Attributen, aus denen ausgwählt werden kann.</param>
            <returns>Den <see cref="T:System.Type"/> des ausgewählten Attributs.</returns>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.IDialogLernen`2.AusgabeBaumstruktur">
            <summary>
            Gibt den aktuell gelernten Baum auf der Konsole aus.
            </summary>
            <remarks>
            Achtung, falls noch keines der <see cref="M:EntscheidungsbaumLernen.Interfaces.IDialogLernen`2.LerneBeispiele"/> aufgerufen wurde, wird versucht einen vorherigen Baum zu laden!
            </remarks>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="T:EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel">
            <summary>
            Interface für die Darstellung des Entscheidungsbaums nach außen.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="P:EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel.KnotenTyp">
            <summary>
            Typ des aktuellen Knotens.
            </summary>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel.GetKind(System.String@)">
            <summary>
            Liefert das zur <paramref name="kategorie"/> passende Kind.
            </summary>
            <param name="kategorie">Kategorie die zurückgegeben werden soll.</param>
            <returns>Das übergebene Kind, wenn es zur Kategorie eines gibt.</returns>
            <exception cref="T:System.ArgumentException">Wenn die übergebene Kategorie nicht existiert.</exception>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel.IstBlatt(System.String@)">
            <summary>
            Liefert ob das Kind zur übergebenen Kategorie ein Blatt ist und das Ergebniss enthält, oder wieder eine <see cref="T:EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel"/> ist.
            </summary>
            <param name="kategorie">Kategorie, die geprüft werden soll.</param>
            <returns><i>True</i> wenn das Kind zur <paramref name="kategorie"/> ein Blatt ist, ansonsten <i>false</i>.</returns>
            <exception cref="T:System.ArgumentException">Wenn die übergebene Kategorie nicht existiert.</exception>
        </member>
        <member name="T:EntscheidungsbaumLernen.Interfaces.ILernAlgoritmus`2">
            <summary>
            Interface für den Algorithmus zum Lernen des Entscheidungsbaumes.
            </summary>
            <typeparam name="TBsp">Typ der Beispiel-Klasse.</typeparam>
            <typeparam name="TResult">Typ der Eigenschaft in der <typeparamref name="TBsp"/>, der das Ergebnis darstellt.</typeparam>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.ILernAlgoritmus`2.Lerne(System.Collections.Generic.List{`0}@)">
            <inheritdoc cref="M:EntscheidungsbaumLernen.Interfaces.ILernAlgoritmus`2.Lerne(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@,`1@)"/>
            <remarks>
            Es werden alle Attribute von <typeparamref name="TBsp"/> verwendet die <see cref="T:System.Enum"/>s sind. Außer <typeparamref name="TResult"/>.
            </remarks>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.ILernAlgoritmus`2.Lerne(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@)">
            <inheritdoc cref="M:EntscheidungsbaumLernen.Interfaces.ILernAlgoritmus`2.Lerne(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@,`1@)"/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.ILernAlgoritmus`2.Lerne(System.Collections.Generic.List{`0}@,`1@)">
            <inheritdoc cref="M:EntscheidungsbaumLernen.Interfaces.ILernAlgoritmus`2.Lerne(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@,`1@)"/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.ILernAlgoritmus`2.Lerne(System.Collections.Generic.List{`0}@,System.Collections.Generic.List{System.Type}@,`1@)">
            <summary>
            Erzeugt aus der Beispielliste einen Entscheidungsbaum, welcher im <see cref="T:EntscheidungsbaumLernen.Interfaces.IWissensspeicher"/> abgelegt wird.
            </summary>
            <param name="beispielliste">Liste an Beispielen, von denen gelernt werden soll.</param>
            <param name="attributsliste">List der Attribute aus <typeparamref name="TBsp"/> die zum Lernen verwendet werden soll.</param>
            <param name="defaultWert">Wert welcher verwendet wird, wenn ein Ergebnis nicht eindeutig zugewiesen werden kann.</param>
            <returns>Einen <see cref="T:EntscheidungsbaumLernen.Interfaces.IWissensspeicher"/> in dem der erlernte Baum gespeichert ist.</returns>
        </member>
        <member name="T:EntscheidungsbaumLernen.Interfaces.IWissensspeicher">
            <summary>
            Inteface für die externe Darstellung des Wissensspeichers.
            </summary>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.1 14.06.2021 - Paz-Paz - 'Next', 'SetNaechsteInstanz' u. 'SpeichereBaum' hinzugefügt.<br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="P:EntscheidungsbaumLernen.Interfaces.IWissensspeicher.Next">
            <summary>
            Nächster Wissensspeicher in der Kette, oder Null wenn keiner mehr gespeichert ist.
            </summary>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.IWissensspeicher.LadeBaum">
            <summary>
            Lädet den gespeicherten Baum.
            </summary>
            <remarks>
            Dabei werden, die hinzugefügten einzelnen Wissensspeicher (z.B: "RAM", "Datei", ...) in der Reihenfolge des Hinzufüens ausgelesen bis das erste Ergebnis geliefert wird.
            </remarks>
            <returns>Den gefundenen Baum. (Bzw. dessen Wurzel <see cref="T:EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel"/>.</returns>
            <exception cref="T:System.InvalidCastException">Wenn nichts gespeichertes gefunden weden konnte.</exception>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.IWissensspeicher.SetNaechsteInstanz(EntscheidungsbaumLernen.Interfaces.IWissensspeicher)">
            <summary>
            Setzt den nächsten Wissensspeicher in der Speicher-Kette.
            </summary>
            <param name="wissensspeicher">Zu hinterlegendes Speicher-Objekt.</param>
            <exception cref="T:System.InvalidCastException">Wenn zuvor schon ein Wissensspeicher hinzugefügt wurde.</exception>
        </member>
        <member name="M:EntscheidungsbaumLernen.Interfaces.IWissensspeicher.SpeichereBaum(EntscheidungsbaumLernen.Interfaces.IEntscheidungsbaumWurzel)">
            <summary>
            Speichert den Baum.
            </summary>
            <remarks>
            Nach dem Speichern <b>muss</b> der nächste Wissensspeicher in der Kette aufgerufen werden, sofern es einen gibt!
            </remarks>
            <param name="wurzel">Wurzel des zu speichernden Baumes.</param>
        </member>
        <member name="T:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1">
            <summary>
            Interne Repräsentation eines Entscheidungsbaum-Knotens.
            </summary>
            <typeparam name="TResult">Typ des Ergebnisses.</typeparam>
            <remarks>
            <br /><b>Versionen:</b><br />
            V1.0 06.06.2021 - Paz-Paz - erstellt<br />
            </remarks>
        </member>
        <member name="F:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1._kinder">
            <summary>
            Liste der Kinder.
            </summary>
            <remarks>
            Als Dictionary für direkten Zugriff.
            </remarks>
        </member>
        <member name="M:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1.#ctor(System.Type)">
            <summary>
            Liefert ein <see cref="T:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1"/>-Objekt mit leeren Liste an Kindern.
            </summary>
            <param name="knotenTyp">Typ des Knotens. (Muss ein Enum sein)</param>
            <exception cref="T:System.ArgumentNullException">Wenn <i>null</i> übergeben wurde.</exception>
            <exception cref="T:System.ArgumentException">Wenn kein Enum übergeben wurde.</exception>
        </member>
        <member name="P:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1.KnotenTyp">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1.GetKind(System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1.IstBlatt(System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1.SetKind(System.String@,EntscheidungsbaumLernen.Models.EntscheidungsbaumElement{`0}@)">
            <summary>
            Setzt das übergebene <paramref name="entscheidungsbaumElement"/> als Kind mit dem Namen <paramref name="kategorie"/>.
            </summary>
            <param name="kategorie">Namen der Kategorie des Kindes. Muss einer der Werte des Enums <typeparamref name="TResult"/> sein.</param>
            <param name="entscheidungsbaumElement">Objekt, welches gesetzt werden soll.</param>
            <exception cref="T:System.ArgumentException">Wenn die übergebene <paramref name="kategorie"/> in <see cref="F:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1._kinder"/> nicht vorkommt.</exception>
        </member>
        <member name="M:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1.SetKind(System.String@,`0@)">
            <summary>
            Setzte den übergebenen Wert von <paramref name="ergebnis"/> als Kind mit dem Namen <paramref name="kategorie"/>.
            </summary>
            <param name="kategorie">Namen der Kategorie des Kindes. Muss einer der Werte des Enums <typeparamref name="TResult"/> sein.</param>
            <param name="ergebnis">Objekt, welches gesetzt werden soll.</param>
            <exception cref="T:System.ArgumentException">Wenn die übergebene <paramref name="kategorie"/> in <see cref="F:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1._kinder"/> nicht vorkommt.</exception>
        </member>
        <member name="M:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1.KeyPruefung(System.String@)">
            <summary>
            Prüft ob die übegebene <paramref name="kategorie"/> ein gülter Key in <see cref="F:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1._kinder"/> ist.
            </summary>
            <param name="kategorie">Zu prüfende Kategorie.</param>
            <exception cref="T:System.ArgumentException">Wenn die übergebene <paramref name="kategorie"/> in <see cref="F:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1._kinder"/> nicht vorkommt.</exception>
            <exception cref="T:System.ArgumentException">Wenn die übergebene <paramref name="kategorie"/> in <see cref="F:EntscheidungsbaumLernen.Models.EntscheidungsbaumElement`1._kinder"/> nicht vorkommt.</exception>
        </member>
    </members>
</doc>
